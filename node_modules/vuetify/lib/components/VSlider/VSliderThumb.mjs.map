{"version":3,"sources":["../../../src/components/VSlider/VSliderThumb.tsx"],"names":["VScaleTransition","VSliderSymbol","useElevation","Ripple","useTextColor","computed","inject","convertToUnit","defineComponent","keyValues","VSliderThumb","name","directives","props","focused","Boolean","max","type","Number","required","min","modelValue","position","emits","v","setup","slots","emit","slider","Error","thumbColor","step","vertical","disabled","thumbSize","thumbLabel","direction","label","readonly","elevation","isReversed","horizontalDirection","mousePressed","decimals","textColorClasses","textColorStyles","pageup","pagedown","end","home","left","right","down","up","relevantKeys","multipliers","value","parseKeydown","e","includes","key","preventDefault","_step","steps","increase","multiplier","shiftKey","ctrlKey","Math","onKeydown","newValue","positionPercentage","inset","elevationClasses","undefined","toFixed"],"mappings":"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","sourcesContent":["// Styles\nimport './VSliderThumb.sass'\n\n// Components\nimport { VScaleTransition } from '../transitions'\nimport { VSliderSymbol } from './slider'\nimport { useElevation } from '@/composables/elevation'\n\n// Directives\nimport Ripple from '@/directives/ripple'\n\n// Composables\nimport { useTextColor } from '@/composables/color'\n\n// Utilities\nimport { computed, inject } from 'vue'\nimport { convertToUnit, defineComponent, keyValues } from '@/util'\n\nexport const VSliderThumb = defineComponent({\n  name: 'VSliderThumb',\n\n  directives: { Ripple },\n\n  props: {\n    focused: Boolean,\n    max: {\n      type: Number,\n      required: true,\n    },\n    min: {\n      type: Number,\n      required: true,\n    },\n    modelValue: {\n      type: Number,\n      required: true,\n    },\n    position: {\n      type: Number,\n      required: true,\n    },\n  },\n\n  emits: {\n    'update:modelValue': (v: number) => true,\n  },\n\n  setup (props, { slots, emit }) {\n    const slider = inject(VSliderSymbol)\n\n    if (!slider) throw new Error('[Vuetify] v-slider-thumb must be used inside v-slider or v-range-slider')\n\n    const {\n      thumbColor,\n      step,\n      vertical,\n      disabled,\n      thumbSize,\n      thumbLabel,\n      direction,\n      label,\n      readonly,\n      elevation,\n      isReversed,\n      horizontalDirection,\n      mousePressed,\n      decimals,\n    } = slider\n\n    const { textColorClasses, textColorStyles } = useTextColor(thumbColor)\n\n    const { pageup, pagedown, end, home, left, right, down, up } = keyValues\n    const relevantKeys = [pageup, pagedown, end, home, left, right, down, up]\n\n    const multipliers = computed(() => {\n      if (step.value) return [1, 2, 3]\n      else return [1, 5, 10]\n    })\n\n    function parseKeydown (e: KeyboardEvent, value: number) {\n      if (!relevantKeys.includes(e.key)) return\n\n      e.preventDefault()\n\n      const _step = step.value || 0.1\n      const steps = (props.max - props.min) / _step\n      if ([left, right, down, up].includes(e.key)) {\n        const increase = isReversed.value ? [left, up] : [right, up]\n        const direction = increase.includes(e.key) ? 1 : -1\n        const multiplier = e.shiftKey ? 2 : (e.ctrlKey ? 1 : 0)\n\n        value = value + (direction * _step * multipliers.value[multiplier])\n      } else if (e.key === home) {\n        value = props.min\n      } else if (e.key === end) {\n        value = props.max\n      } else {\n        const direction = e.key === pagedown ? 1 : -1\n        value = value - (direction * _step * (steps > 100 ? steps / 10 : 10))\n      }\n\n      return Math.max(props.min, Math.min(props.max, value))\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      const newValue = parseKeydown(e, props.modelValue)\n\n      newValue != null && emit('update:modelValue', newValue)\n    }\n\n    return () => {\n      const positionPercentage = convertToUnit(vertical.value ? 100 - props.position : props.position, '%')\n      const inset = vertical.value ? 'block' : 'inline'\n      const { elevationClasses } = useElevation(computed(() => !disabled.value ? elevation.value : undefined))\n\n      return (\n        <div\n          class={[\n            'v-slider-thumb',\n            {\n              'v-slider-thumb--focused': props.focused,\n              'v-slider-thumb--pressed': props.focused && mousePressed.value,\n            },\n          ]}\n          style={{\n            [`inset-${inset}-start`]: `calc(${positionPercentage} - var(--v-slider-thumb-size) / 2)`,\n            '--v-slider-thumb-size': convertToUnit(thumbSize.value),\n            direction: !vertical.value ? horizontalDirection.value : undefined,\n          }}\n          role=\"slider\"\n          tabindex={ disabled.value ? -1 : 0 }\n          aria-label={ label.value }\n          aria-valuemin={ props.min }\n          aria-valuemax={ props.max }\n          aria-valuenow={ props.modelValue }\n          aria-readonly={ readonly.value }\n          aria-orientation={ direction.value }\n          onKeydown={ !readonly.value ? onKeydown : undefined }\n        >\n          <div\n            class={[\n              'v-slider-thumb__surface',\n              textColorClasses.value,\n              elevationClasses.value,\n            ]}\n            style={{\n              ...textColorStyles.value,\n            }}\n          />\n          <div\n            class={[\n              'v-slider-thumb__ripple',\n              textColorClasses.value,\n            ]}\n            style={ textColorStyles.value }\n            v-ripple={[true, null, ['circle', 'center']]}\n          />\n          <VScaleTransition origin=\"bottom center\">\n            <div\n              class=\"v-slider-thumb__label-container\"\n              v-show={ (thumbLabel.value && props.focused) || thumbLabel.value === 'always' }\n            >\n              <div\n                class={[\n                  'v-slider-thumb__label',\n                ]}\n              >\n                <div>\n                  { slots['thumb-label']?.({ modelValue: props.modelValue }) ?? props.modelValue.toFixed(step.value ? decimals.value : 1) }\n                </div>\n              </div>\n            </div>\n          </VScaleTransition>\n        </div>\n      )\n    }\n  },\n})\n\nexport type VSliderThumb = InstanceType<typeof VSliderThumb>\n"],"file":"VSliderThumb.mjs"}