{"version":3,"sources":["../../../src/components/VToolbar/VToolbar.tsx"],"names":["VImg","VToolbarTitle","makeBorderProps","useBorder","makeElevationProps","useElevation","makeRoundedProps","useRounded","makeTagProps","makeThemeProps","provideTheme","provideDefaults","useBackgroundColor","computed","toRef","convertToUnit","genericComponent","useRender","allowedDensities","VToolbar","name","props","absolute","Boolean","collapse","color","String","density","type","default","validator","v","includes","extended","extensionHeight","Number","flat","floating","height","image","title","tag","setup","slots","borderClasses","elevationClasses","roundedClasses","themeClasses","backgroundColorClasses","backgroundColorStyles","contentHeight","VBtn","variant","VTextField","hideDetails","scoped","hasTitle","hasImage","isExtended","extension","value","src","prepend","text","append"],"mappings":";AAAA;AACA,wB,CAEA;;SACSA,I;SACAC,a,wBAET;;SACSC,e,EAAiBC,S;SACjBC,kB,EAAoBC,Y;SACpBC,gB,EAAkBC,U;SAClBC,Y;SACAC,c,EAAgBC,Y;SAChBC,e;SACAC,kB,uCAET;;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,KAAhC;SACSC,a,EAAeC,gB,EAAkBC,S,gCAE1C;;AAMA,MAAMC,gBAAgB,GAAG,CAAC,IAAD,EAAO,WAAP,EAAoB,SAApB,EAA+B,aAA/B,EAA8C,SAA9C,CAAzB;AAEA,OAAO,MAAMC,QAAQ,GAAGH,gBAAgB,GASnC;AACHI,EAAAA,IAAI,EAAE,UADH;AAGHC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAEC,OADL;AAELC,IAAAA,QAAQ,EAAED,OAFL;AAGLE,IAAAA,KAAK,EAAEC,MAHF;AAILC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAEF,MADC;AAEPG,MAAAA,OAAO,EAAE,SAFF;AAGPC,MAAAA,SAAS,EAAGC,CAAD,IAAYb,gBAAgB,CAACc,QAAjB,CAA0BD,CAA1B;AAHhB,KAJJ;AASLE,IAAAA,QAAQ,EAAEV,OATL;AAULW,IAAAA,eAAe,EAAE;AACfN,MAAAA,IAAI,EAAE,CAACO,MAAD,EAAST,MAAT,CADS;AAEfG,MAAAA,OAAO,EAAE;AAFM,KAVZ;AAcLO,IAAAA,IAAI,EAAEb,OAdD;AAeLc,IAAAA,QAAQ,EAAEd,OAfL;AAgBLe,IAAAA,MAAM,EAAE;AACNV,MAAAA,IAAI,EAAE,CAACO,MAAD,EAAST,MAAT,CADA;AAENG,MAAAA,OAAO,EAAE;AAFH,KAhBH;AAoBLU,IAAAA,KAAK,EAAEb,MApBF;AAqBLc,IAAAA,KAAK,EAAEd,MArBF;AAuBL,OAAGxB,eAAe,EAvBb;AAwBL,OAAGE,kBAAkB,EAxBhB;AAyBL,OAAGE,gBAAgB,EAzBd;AA0BL,OAAGE,YAAY,CAAC;AAAEiC,MAAAA,GAAG,EAAE;AAAP,KAAD,CA1BV;AA2BL,OAAGhC,cAAc;AA3BZ,GAHJ;;AAiCHiC,EAAAA,KAAK,CAAErB,KAAF,QAAoB;AAAA,QAAX;AAAEsB,MAAAA;AAAF,KAAW;AACvB,UAAM;AAAEC,MAAAA;AAAF,QAAoBzC,SAAS,CAACkB,KAAD,CAAnC;AACA,UAAM;AAAEwB,MAAAA;AAAF,QAAuBxC,YAAY,CAACgB,KAAD,CAAzC;AACA,UAAM;AAAEyB,MAAAA;AAAF,QAAqBvC,UAAU,CAACc,KAAD,CAArC;AACA,UAAM;AAAE0B,MAAAA;AAAF,QAAmBrC,YAAY,CAACW,KAAD,CAArC;AACA,UAAM;AAAE2B,MAAAA,sBAAF;AAA0BC,MAAAA;AAA1B,QAAoDrC,kBAAkB,CAACE,KAAK,CAACO,KAAD,EAAQ,OAAR,CAAN,CAA5E;AACA,UAAM6B,aAAa,GAAGrC,QAAQ,CAAC,MAC7BsB,MAAM,CAACd,KAAK,CAACiB,MAAP,CAAN,IACCjB,KAAK,CAACM,OAAN,KAAkB,WAAlB,GAAgCQ,MAAM,CAACd,KAAK,CAACiB,MAAP,CAAtC,GAAuD,CADxD,KAECjB,KAAK,CAACM,OAAN,KAAkB,aAAlB,GAAkC,CAAlC,GAAsC,CAFvC,KAGCN,KAAK,CAACM,OAAN,KAAkB,SAAlB,GAA8B,EAA9B,GAAmC,CAHpC,CAD4B,CAA9B;AAOAhB,IAAAA,eAAe,CAAC;AACdwC,MAAAA,IAAI,EAAE;AACJf,QAAAA,IAAI,EAAE,IADF;AAEJgB,QAAAA,OAAO,EAAE;AAFL,OADQ;AAKdC,MAAAA,UAAU,EAAE;AACVC,QAAAA,WAAW,EAAE;AADH;AALE,KAAD,EAQZ;AAAEC,MAAAA,MAAM,EAAE;AAAV,KARY,CAAf;AAUAtC,IAAAA,SAAS,CAAC,MAAM;AAAA;;AACd,YAAMuC,QAAQ,GAAG,CAAC,EAAEnC,KAAK,CAACmB,KAAN,IAAeG,KAAK,CAACH,KAAvB,CAAlB;AACA,YAAMiB,QAAQ,GAAG,CAAC,EAAEd,KAAK,CAACJ,KAAN,IAAelB,KAAK,CAACkB,KAAvB,CAAlB;AACA,YAAMmB,UAAU,GAAG,CAAC,EAAErC,KAAK,CAACY,QAAN,IAAkBU,KAAK,CAACgB,SAA1B,CAApB;AAEA;AAAA,iBAEW,CACL,WADK,EAEL;AACE,iCAAuBtC,KAAK,CAACC,QAD/B;AAEE,iCAAuBD,KAAK,CAACG,QAF/B;AAGE,6BAAmBH,KAAK,CAACe,IAH3B;AAIE,iCAAuBf,KAAK,CAACgB,QAJ/B;AAKE,WAAE,sBAAqBhB,KAAK,CAACM,OAAQ,EAArC,GAAyC;AAL3C,SAFK,EASLqB,sBAAsB,CAACY,KATlB,EAULhB,aAAa,CAACgB,KAVT,EAWLf,gBAAgB,CAACe,KAXZ,EAYLd,cAAc,CAACc,KAZV,EAaLb,YAAY,CAACa,KAbR,CAFX;AAAA,iBAiBW,CACLX,qBAAqB,CAACW,KADjB;AAjBX;AAAA,wBAqBMH,QAAQ;AAAA,mBACG;AADH,YAEJd,KAAK,CAACJ,KAAN,mBACEI,KAAK,CAACJ,KADR,qBACE,kBAAAI,KAAK,EAAS;AAAEkB,UAAAA,GAAG,EAAExC,KAAK,CAACkB;AAAb,SAAT,CADP;AAAA,iBAEelB,KAAK,CAACkB,KAFrB;AAAA;AAAA,gBAFI,EArBd;AAAA,mBA+BY,oBA/BZ;AAAA,mBAgCa;AAAED,YAAAA,MAAM,EAAEvB,aAAa,CAACmC,aAAa,CAACU,KAAf;AAAvB;AAhCb,YAkCQjB,KAAK,CAACmB,OAAN;AAAA,mBACW;AADX,8BAEInB,KAAK,CAACmB,OAFV,qBAEI,oBAAAnB,KAAK,CAFT,EAlCR,EAwCQa,QAAQ;AAAA,kBACcnC,KAAK,CAACmB;AADpB;AAEHuB,UAAAA,IAAI,EAAEpB,KAAK,CAACH;AAFT,UAxChB,oBA8CQG,KAAK,CAACd,OA9Cd,qBA8CQ,oBAAAc,KAAK,CA9Cb,EAgDQA,KAAK,CAACqB,MAAN;AAAA,mBACW;AADX,6BAEIrB,KAAK,CAACqB,MAFV,qBAEI,mBAAArB,KAAK,CAFT,EAhDR,IAuDMe,UAAU;AAAA,mBAEF,sBAFE;AAAA,mBAGD;AAAEpB,YAAAA,MAAM,EAAEvB,aAAa,CAACM,KAAK,CAACa,eAAP;AAAvB;AAHC,gCAKNS,KAAK,CAACgB,SALA,qBAKN,sBAAAhB,KAAK,CALC,EAvDhB;AAAA;AAiED,KAtEQ,CAAT;AAwEA,WAAO,EAAP;AACD;;AAjIE,CATmC,CAAjC","sourcesContent":["// Styles\nimport './VToolbar.sass'\n\n// Components\nimport { VImg } from '@/components/VImg'\nimport { VToolbarTitle } from '..'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { provideDefaults } from '@/composables/defaults'\nimport { useBackgroundColor } from '@/composables/color'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { convertToUnit, genericComponent, useRender } from '@/util'\n\n// Types\nimport type { MakeSlots } from '@/util'\nimport type { PropType } from 'vue'\n\nexport type Density = typeof allowedDensities[number]\n\nconst allowedDensities = [null, 'prominent', 'default', 'comfortable', 'compact'] as const\n\nexport const VToolbar = genericComponent<new () => {\n  $slots: MakeSlots<{\n    default: []\n    image: [{ image: string }]\n    prepend: []\n    append: []\n    title: []\n    extension: []\n  }>\n}>()({\n  name: 'VToolbar',\n\n  props: {\n    absolute: Boolean,\n    collapse: Boolean,\n    color: String,\n    density: {\n      type: String as PropType<Density>,\n      default: 'default',\n      validator: (v: any) => allowedDensities.includes(v),\n    },\n    extended: Boolean,\n    extensionHeight: {\n      type: [Number, String],\n      default: 48,\n    },\n    flat: Boolean,\n    floating: Boolean,\n    height: {\n      type: [Number, String],\n      default: 64,\n    },\n    image: String,\n    title: String,\n\n    ...makeBorderProps(),\n    ...makeElevationProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps({ tag: 'header' }),\n    ...makeThemeProps(),\n  },\n\n  setup (props, { slots }) {\n    const { borderClasses } = useBorder(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const { themeClasses } = provideTheme(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const contentHeight = computed(() => (\n      Number(props.height) +\n      (props.density === 'prominent' ? Number(props.height) : 0) -\n      (props.density === 'comfortable' ? 8 : 0) -\n      (props.density === 'compact' ? 16 : 0)\n    ))\n\n    provideDefaults({\n      VBtn: {\n        flat: true,\n        variant: 'text',\n      },\n      VTextField: {\n        hideDetails: true,\n      },\n    }, { scoped: true })\n\n    useRender(() => {\n      const hasTitle = !!(props.title || slots.title)\n      const hasImage = !!(slots.image || props.image)\n      const isExtended = !!(props.extended || slots.extension)\n\n      return (\n        <props.tag\n          class={[\n            'v-toolbar',\n            {\n              'v-toolbar--absolute': props.absolute,\n              'v-toolbar--collapse': props.collapse,\n              'v-toolbar--flat': props.flat,\n              'v-toolbar--floating': props.floating,\n              [`v-toolbar--density-${props.density}`]: true,\n            },\n            backgroundColorClasses.value,\n            borderClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            themeClasses.value,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n          ]}\n        >\n          { hasImage && (\n            <div class=\"v-toolbar__image\">\n              { slots.image\n                ? slots.image?.({ src: props.image })\n                : (<VImg src={ props.image } cover />)\n              }\n            </div>\n          ) }\n\n          <div\n            class=\"v-toolbar__content\"\n            style={{ height: convertToUnit(contentHeight.value) }}\n          >\n            { slots.prepend && (\n              <div class=\"v-toolbar__prepend\">\n                { slots.prepend?.() }\n              </div>\n            ) }\n\n            { hasTitle && (\n              <VToolbarTitle text={ props.title }>\n                {{ text: slots.title }}\n              </VToolbarTitle>\n            ) }\n\n            { slots.default?.() }\n\n            { slots.append && (\n              <div class=\"v-toolbar__append\">\n                { slots.append?.() }\n              </div>\n            ) }\n          </div>\n\n          { isExtended && (\n            <div\n              class=\"v-toolbar__extension\"\n              style={{ height: convertToUnit(props.extensionHeight) }}\n            >\n              { slots.extension?.() }\n            </div>\n          ) }\n        </props.tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VToolbar = InstanceType<typeof VToolbar>\n"],"file":"VToolbar.mjs"}