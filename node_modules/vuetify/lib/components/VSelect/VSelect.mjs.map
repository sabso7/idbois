{"version":3,"sources":["../../../src/components/VSelect/VSelect.tsx"],"names":["VChip","VIcon","VList","VListItem","VMenu","VTextField","makeFilterProps","useFilter","useForwardRef","useLocale","useProxiedModel","computed","ref","watch","genericComponent","useRender","wrapInArray","VSelect","name","props","chips","Boolean","hideNoData","hideSelected","items","type","Array","default","modelValue","Number","String","multiple","noDataText","openOnClear","emits","e","val","setup","attrs","slots","t","vTextFieldRef","activator","model","v","filteredItems","menu","active","get","value","set","array","item","title","includes","push","length","selections","filter","onClear","onKeydown","key","$el","querySelector","join","appendInner","preventDefault","map","selection","index"],"mappings":"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","sourcesContent":["// Styles\nimport './VSelect.sass'\n\n// Components\nimport { VChip } from '@/components/VChip'\nimport { VIcon } from '@/components/VIcon'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { VTextField } from '@/components/VTextField'\n\n// Composables\nimport { makeFilterProps, useFilter } from '@/composables/filter'\nimport { useForwardRef } from '@/composables/forwardRef'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utility\nimport { computed, ref, watch } from 'vue'\nimport { genericComponent, useRender, wrapInArray } from '@/util'\n\n// Types\nimport type { LinkProps } from '@/composables/router'\nimport type { MakeSlots } from '@/util'\nimport type { PropType } from 'vue'\n\nexport type SelectItem = string | (string | number)[] | ((item: Record<string, any>, fallback?: any) => any) | (LinkProps & {\n  text: string\n})\n\nexport const VSelect = genericComponent<new <T>() => {\n  $slots: MakeSlots<{\n    default: []\n    title: []\n  }>\n}>()({\n  name: 'VSelect',\n\n  props: {\n    chips: Boolean,\n    hideNoData: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array as PropType<SelectItem[]>,\n      default: () => ([]),\n    },\n    modelValue: {\n      type: [Number, String, Array],\n      default: () => ([]),\n    },\n    multiple: Boolean,\n    noDataText: {\n      type: String,\n      default: '$vuetify.noDataText',\n    },\n    openOnClear: Boolean,\n\n    ...makeFilterProps(),\n  },\n\n  emits: {\n    'click:clear': (e: MouseEvent) => true,\n    'update:modelValue': (val: any) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref()\n    const activator = ref()\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => wrapInArray(v),\n      (v: any) => props.multiple ? v : v[0]\n    )\n    const { filteredItems } = useFilter(props, props.items)\n\n    const menu = ref(false)\n    const active = computed({\n      get: () => model.value,\n      set: val => {\n        model.value = val\n\n        if (props.multiple) return\n\n        menu.value = false\n      },\n    })\n    const items = computed(() => {\n      const array = []\n\n      for (const { item } of filteredItems.value as any) {\n        const title = item?.title ?? String(item)\n        const value = item?.value ?? item\n\n        if (props.hideSelected && active.value.includes(value)) {\n          continue\n        }\n\n        array.push({ title, value })\n      }\n\n      if (!array.length && !props.hideNoData) {\n        array.push({ title: t(props.noDataText) })\n      }\n\n      return array\n    })\n    const selections = computed(() => {\n      return items.value.filter(item => active.value.includes(item.value))\n    })\n\n    function onClear (e: MouseEvent) {\n      active.value = []\n\n      if (props.openOnClear) {\n        menu.value = true\n      }\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (\n        ['Enter', ' '].includes(e.key) &&\n        !menu.value\n      ) {\n        menu.value = true\n      }\n\n      if (\n        e.key === 'Escape' &&\n        menu.value\n      ) {\n        menu.value = false\n      }\n    }\n\n    watch(() => vTextFieldRef.value, val => {\n      activator.value = val.$el.querySelector('.v-input__control')\n    })\n\n    useRender(() => {\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          class={[\n            'v-select',\n            {\n              'v-select--active-menu': menu.value,\n              'v-select--chips': !!props.chips,\n            },\n          ]}\n          readonly\n          onClick:clear={ onClear }\n          onClick:control={ () => menu.value = true }\n          onBlur={ () => menu.value = false }\n          modelValue={ model.value.join(', ') }\n          onKeydown={ onKeydown }\n          { ...attrs }\n        >\n          {{\n            ...slots,\n            appendInner: () => (\n              <VIcon\n                class=\"v-select__menu-icon\"\n                icon=\"mdi-menu-down\"\n              />\n            ),\n            default: () => (\n              <>\n                { activator.value && (\n                  <VMenu\n                    v-model={ menu.value }\n                    activator={ activator.value }\n                    contentClass=\"v-select__content\"\n                    openOnClick={ false }\n                  >\n                    <VList\n                      v-model:active={ active.value }\n                      items={ items.value }\n                      activeStrategy={ props.multiple ? 'multiple' : 'single' }\n                    >\n                      {{\n                        item: (item: any) => {\n                          return (\n                            <VListItem\n                              onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                              { ...item }\n                            />\n                          )\n                        },\n                      }}\n                    </VList>\n                  </VMenu>\n                ) }\n\n                { selections.value.length > 0 && (\n                  <div class=\"v-select__selections v-field__input\">\n                    { selections.value.map((selection, index) => (\n                      <div class=\"v-select__selection\">\n                        { props.chips\n                          ? (\n                            <VChip\n                              text={ selection.title }\n                              size=\"small\"\n                            />\n                          ) : (\n                            <span class=\"v-select__selection-text\">\n                              { selection.title }\n                              { index < model.value.length - 1 && (\n                                <span class=\"v-select__selection-comma\">,</span>\n                              ) }\n                            </span>\n                          )\n                        }\n                      </div>\n                    )) }\n                  </div>\n                ) }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return useForwardRef({\n      //\n    }, vTextFieldRef)\n  },\n})\n\nexport type VSelect = InstanceType<typeof VSelect>\n"],"file":"VSelect.mjs"}