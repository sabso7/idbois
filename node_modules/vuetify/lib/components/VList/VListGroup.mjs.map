{"version":3,"sources":["../../../src/components/VList/VListGroup.tsx"],"names":["VExpandTransition","useList","makeTagProps","useNestedGroup","computed","genericComponent","VListGroup","name","props","value","collapseIcon","type","String","default","expandIcon","setup","slots","isOpen","open","list","onClick","e","activatorProps","appendIcon","class","hasPrepend","activator"],"mappings":";AAAA;SACSA,iB,oCAET;;SACSC,O;SACAC,Y;SACAC,c,+CAET;;AACA,SAASC,QAAT,QAAyB,KAAzB;SACSC,gB,gCAET;;AAYA,OAAO,MAAMC,UAAU,GAAGD,gBAAgB,GAQrC;AACHE,EAAAA,IAAI,EAAE,YADH;AAGHC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,IADF;AAELC,IAAAA,YAAY,EAAE;AACZC,MAAAA,IAAI,EAAEC,MADM;AAEZC,MAAAA,OAAO,EAAE;AAFG,KAFT;AAMLC,IAAAA,UAAU,EAAE;AACVH,MAAAA,IAAI,EAAEC,MADI;AAEVC,MAAAA,OAAO,EAAE;AAFC,KANP;AAWL,OAAGX,YAAY;AAXV,GAHJ;;AAiBHa,EAAAA,KAAK,CAAEP,KAAF,QAAoB;AAAA,QAAX;AAAEQ,MAAAA;AAAF,KAAW;AACvB,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAmBf,cAAc,CAACK,KAAD,CAAvC;AACA,UAAMW,IAAI,GAAGlB,OAAO,EAApB;;AAEA,UAAMmB,OAAO,GAAIC,CAAD,IAAc;AAC5BH,MAAAA,IAAI,CAAC,CAACD,MAAM,CAACR,KAAT,EAAgBY,CAAhB,CAAJ;AACD,KAFD;;AAIA,UAAMC,cAAc,GAAGlB,QAAQ,CAAC,OAAO;AACrCgB,MAAAA,OADqC;AAErCG,MAAAA,UAAU,EAAEN,MAAM,CAACR,KAAP,GAAeD,KAAK,CAACE,YAArB,GAAoCF,KAAK,CAACM,UAFjB;AAGrCU,MAAAA,KAAK,EAAE,sBAH8B;AAIrCf,MAAAA,KAAK,EAAG,GAAED,KAAK,CAACC,KAAM;AAJe,KAAP,CAAD,CAA/B;AAOA,WAAO,MAAM;AAAA;;AACX;AAAA,iBAEW,CACL,cADK,EAEL;AACE,mCAAyBU,IAAzB,oBAAyBA,IAAI,CAAEM,UAAN,CAAiBhB;AAD5C,SAFK;AAFX;AAAA,4CASMO,KAAK,CAACU,SATZ,qBASM,sBAAAV,KAAK,EAAa;AAAER,UAAAA,KAAK,EAAEc,cAAc,CAACb;AAAxB,SAAb,CATX;AAAA;AAAA,qBAWiB;AAXjB,gCAYUO,KAAK,CAACH,OAZhB,qBAYU,oBAAAG,KAAK,CAZf,cAW+CC,MAAM,CAACR,KAXtD;AAAA;AAAA;AAiBD,KAlBD;AAmBD;;AAnDE,CARqC,CAAnC","sourcesContent":["// Components\nimport { VExpandTransition } from '@/components/transitions'\n\n// Composables\nimport { useList } from './list'\nimport { makeTagProps } from '@/composables/tag'\nimport { useNestedGroup } from '@/composables/nested/nested'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent } from '@/util'\n\n// Types\nimport type { InternalListItem } from './VList'\nimport type { MakeSlots } from '@/util'\n\nexport type ListGroupActivatorSlot = {\n  props: {\n    onClick: (e: Event) => void\n    appendIcon: string\n    class: string\n  }\n}\n\nexport const VListGroup = genericComponent<new <T extends InternalListItem>() => {\n  $props: {\n    items?: T[]\n  }\n  $slots: MakeSlots<{\n    activator: [ListGroupActivatorSlot]\n    default: []\n  }>\n}>()({\n  name: 'VListGroup',\n\n  props: {\n    value: null,\n    collapseIcon: {\n      type: String,\n      default: '$collapse',\n    },\n    expandIcon: {\n      type: String,\n      default: '$expand',\n    },\n\n    ...makeTagProps(),\n  },\n\n  setup (props, { slots }) {\n    const { isOpen, open } = useNestedGroup(props)\n    const list = useList()\n\n    const onClick = (e: Event) => {\n      open(!isOpen.value, e)\n    }\n\n    const activatorProps = computed(() => ({\n      onClick,\n      appendIcon: isOpen.value ? props.collapseIcon : props.expandIcon,\n      class: 'v-list-group__header',\n      value: `${props.value}_header`,\n    }))\n\n    return () => {\n      return (\n        <props.tag\n          class={[\n            'v-list-group',\n            {\n              'v-list-group--prepend': list?.hasPrepend.value,\n            },\n          ]}\n        >\n          { slots.activator?.({ props: activatorProps.value }) }\n          <VExpandTransition>\n            <div class=\"v-list-group__items\" v-show={isOpen.value}>\n              { slots.default?.() }\n            </div>\n          </VExpandTransition>\n        </props.tag>\n      )\n    }\n  },\n})\n"],"file":"VListGroup.mjs"}