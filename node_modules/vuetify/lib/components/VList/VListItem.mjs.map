{"version":3,"sources":["../../../src/components/VList/VListItem.tsx"],"names":["VAvatar","VListItemAvatar","VListItemHeader","VListItemSubtitle","VListItemTitle","genOverlays","makeVariantProps","useVariant","makeBorderProps","useBorder","makeDensityProps","useDensity","makeDimensionProps","useDimension","makeElevationProps","useElevation","makeRoundedProps","useRounded","makeRouterProps","useLink","makeTagProps","makeThemeProps","provideTheme","useList","Ripple","computed","onMounted","genericComponent","useNestedItem","VListItem","name","directives","props","active","Boolean","activeColor","String","activeClass","appendAvatar","appendIcon","disabled","link","prependAvatar","prependIcon","subtitle","title","value","variant","setup","attrs","slots","id","href","activate","isActive","isNestedActive","select","isSelected","root","parent","list","isExactActive","color","variantProps","textColor","open","themeClasses","borderClasses","colorClasses","colorStyles","variantClasses","densityClasses","dimensionStyles","elevationClasses","roundedClasses","slotProps","Tag","isLink","tag","hasTitle","hasSubtitle","hasHeader","hasAppend","append","hasPrepend","prepend","isClickable","updateHasPrepend","undefined","e","navigate","density","default"],"mappings":"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","sourcesContent":["// Styles\nimport './VListItem.sass'\n\n// Components\nimport { VAvatar } from '@/components/VAvatar'\nimport { VListItemAvatar } from './VListItemAvatar'\nimport { VListItemHeader } from './VListItemHeader'\nimport { VListItemSubtitle } from './VListItemSubtitle'\nimport { VListItemTitle } from './VListItemTitle'\n\n// Composables\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useList } from './list'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed, onMounted } from 'vue'\nimport { genericComponent } from '@/util'\nimport { useNestedItem } from '@/composables/nested/nested'\n\n// Types\nimport type { MakeSlots } from '@/util'\n\ntype ListItemSlot = {\n  isActive: boolean\n  activate: (value: boolean) => void\n  isSelected: boolean\n  select: (value: boolean) => void\n}\n\nexport type ListItemTitleSlot = {\n  title?: string\n}\n\nexport type ListItemSubtitleSlot = {\n  subtitle?: string\n}\n\nexport const VListItem = genericComponent<new () => {\n  $slots: MakeSlots<{\n    prepend: [ListItemSlot]\n    append: [ListItemSlot]\n    default: [ListItemSlot]\n    title: [ListItemTitleSlot]\n    subtitle: [ListItemSubtitleSlot]\n  }>\n}>()({\n  name: 'VListItem',\n\n  directives: { Ripple },\n\n  props: {\n    active: Boolean,\n    activeColor: String,\n    activeClass: String,\n    appendAvatar: String,\n    appendIcon: String,\n    disabled: Boolean,\n    link: Boolean,\n    prependAvatar: String,\n    prependIcon: String,\n    subtitle: String,\n    title: String,\n    value: null,\n\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeVariantProps({ variant: 'text' } as const),\n  },\n\n  setup (props, { attrs, slots }) {\n    const link = useLink(props, attrs)\n    const id = computed(() => props.value ?? link.href.value)\n    const { activate, isActive: isNestedActive, select, isSelected, root, parent } = useNestedItem(id)\n    const list = useList()\n    const isActive = computed(() => {\n      return props.active || link.isExactActive?.value || isNestedActive.value\n    })\n    const activeColor = props.activeColor ?? props.color\n    const variantProps = computed(() => ({\n      color: isActive.value ? activeColor : props.color,\n      textColor: props.textColor,\n      variant: props.variant,\n    }))\n\n    onMounted(() => {\n      if (link.isExactActive?.value && parent.value != null) {\n        root.open(parent.value, true)\n      }\n    })\n\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(variantProps)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n\n    const slotProps = computed(() => ({\n      isActive: isActive.value,\n      activate,\n      select,\n      isSelected: isSelected.value,\n    }))\n\n    return () => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasTitle = (slots.title || props.title)\n      const hasSubtitle = (slots.subtitle || props.subtitle)\n      const hasHeader = !!(hasTitle || hasSubtitle)\n      const hasAppend = !!(slots.append || props.appendAvatar || props.appendIcon)\n      const hasPrepend = !!(slots.prepend || props.prependAvatar || props.prependIcon)\n      const isClickable = !props.disabled && (link.isClickable.value || props.link || props.value != null)\n\n      list?.updateHasPrepend(hasPrepend)\n\n      return (\n        <Tag\n          class={[\n            'v-list-item',\n            {\n              'v-list-item--active': isActive.value,\n              'v-list-item--disabled': props.disabled,\n              'v-list-item--link': isClickable,\n              'v-list-item--prepend': !hasPrepend && list?.hasPrepend.value,\n              [`${props.activeClass}`]: isActive.value && props.activeClass,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            colorClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            variantClasses.value,\n          ]}\n          style={[\n            colorStyles.value,\n            dimensionStyles.value,\n          ]}\n          href={ link.href.value }\n          tabindex={ isClickable ? 0 : undefined }\n          onClick={ isClickable && ((e: MouseEvent) => {\n            link.navigate?.(e)\n            props.value != null && activate(!isNestedActive.value, e)\n          })}\n          v-ripple={ isClickable }\n        >\n          { genOverlays(isClickable || isActive.value, 'v-list-item') }\n\n          { hasPrepend && (\n            slots.prepend\n              ? slots.prepend(slotProps.value)\n              : (\n                <VListItemAvatar left>\n                  <VAvatar\n                    density={ props.density }\n                    icon={ props.prependIcon }\n                    image={ props.prependAvatar }\n                  />\n                </VListItemAvatar>\n              )\n          ) }\n\n          { hasHeader && (\n            <VListItemHeader>\n              { hasTitle && (\n                <VListItemTitle>\n                  { slots.title\n                    ? slots.title({ title: props.title })\n                    : props.title\n                  }\n                </VListItemTitle>\n              ) }\n\n              { hasSubtitle && (\n                <VListItemSubtitle>\n                  { slots.subtitle\n                    ? slots.subtitle({ subtitle: props.subtitle })\n                    : props.subtitle\n                  }\n                </VListItemSubtitle>\n              ) }\n            </VListItemHeader>\n          ) }\n\n          { slots.default?.(slotProps.value) }\n\n          { hasAppend && (\n            slots.append\n              ? slots.append(slotProps.value)\n              : (\n                <VListItemAvatar right>\n                  <VAvatar\n                    density={ props.density }\n                    icon={ props.appendIcon }\n                    image={ props.appendAvatar }\n                  />\n                </VListItemAvatar>\n              )\n          ) }\n        </Tag>\n      )\n    }\n  },\n})\n\nexport type VListItem = InstanceType<typeof VListItem>\n"],"file":"VListItem.mjs"}